import { MapPin, Users, Briefcase, ClipboardList, FileBadge } from "lucide-react";

const JobExtraInfo = ({ job }) => {
  if (!job) return null;

  // üåê Hi·ªÉn th·ªã h√¨nh th·ª©c l√†m vi·ªác
  const workModes = Array.isArray(job.work_modes)
    ? job.work_modes
        .map(
          (mode) =>
            (
              {
                onsite: "L√†m vi·ªác t·∫°i vƒÉn ph√≤ng",
                remote: "L√†m vi·ªác t·ª´ xa",
                hybrid: "K·∫øt h·ª£p (Hybrid)",
              }[mode] || mode
            )
        )
        .join(", ")
    : "Kh√¥ng r√µ";

  // üßæ D·ªãch lo·∫°i c√¥ng vi·ªác (employment type)
  const employmentTypeMap = {
    fulltime: "To√†n th·ªùi gian",
    parttime: "B√°n th·ªùi gian",
    intern: "Th·ª±c t·∫≠p",
    contract: "H·ª£p ƒë·ªìng ng·∫Øn h·∫°n",
  };
  const employmentTypeLabel =
    employmentTypeMap[job.employment_type] || "Kh√¥ng x√°c ƒë·ªãnh";

  // üß† C·∫•u h√¨nh c√°c m·ª•c hi·ªÉn th·ªã
  const infoItems = [
    { label: "ƒê·ªãa ch·ªâ l√†m vi·ªác", value: job.location_full || "Kh√¥ng r√µ", icon: MapPin },
    { label: "S·ªë l∆∞·ª£ng tuy·ªÉn", value: job.number_of_openings || "1", icon: Users },
    { label: "H√¨nh th·ª©c l√†m vi·ªác", value: workModes, icon: Briefcase },
    { label: "Lo·∫°i c√¥ng vi·ªác", value: employmentTypeLabel, icon: FileBadge },
    {
      label: "Y√™u c·∫ßu k·ªπ nƒÉng",
      value: (
        <div className="flex flex-wrap gap-2 mt-1">
          {Array.isArray(job.skills) && job.skills.length > 0 ? (
            job.skills.map((s, idx) => {
              const name = typeof s === "string" ? s : s.skill?.name || s.name || "";
              return (
                <span
                  key={idx}
                  className="px-3 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-700 border border-blue-200 shadow-sm hover:bg-blue-200 hover:-translate-y-[1px] transition-all duration-200"
                >
                  {name}
                </span>
              );
            })
          ) : (
            <span className="text-slate-500 text-sm">Kh√¥ng y√™u c·∫ßu</span>
          )}
        </div>
      ),
      icon: ClipboardList,
    },
  ];

  return (
    <div className="flex flex-col bg-white rounded-2xl shadow-md border border-slate-200 p-6">
      <h3 className="text-base font-semibold text-slate-800 mb-4 pb-3 border-b border-slate-100">
        Th√¥ng tin chung
      </h3>

      <div className="space-y-4">
        {infoItems.map(({ label, value, icon: Icon }) => (
          <div key={label} className="flex items-start gap-3">
            <div className="p-2.5 bg-blue-50 rounded-xl flex items-center justify-center shadow-sm">
              <Icon size={18} className="text-blue-600" />
            </div>
            <div className="flex-1">
              <p className="text-xs font-semibold text-slate-500">{label}</p>
              <div className="text-sm font-medium text-slate-800 leading-relaxed">{value}</div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default JobExtraInfo;
